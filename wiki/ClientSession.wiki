#summary Creates and manages a Last.fm session for various services.
#labels Phase-Implementation,session,client

*Package*      com.lfm.client

*Class*        public class Session

*Inheritance*  Session



= Session Summary =

Before submitting tracks to a profile or using many other services like streaming a station, a session must be established with the Last.fm servers. This class takes care of establishing that session. The [http://code.google.com/p/lastfm-as3/wiki/ClientScrobbler Scrobbler class] uses this class to be able to submit tracks. *A session is not needed for using the web services in this library, only scrobbling.*



== Details ==

|| *Constructor Arguments* || *Summary* ||
|| Username || (required) Last.fm username to retrieve the profile data for. ||
|| Password || (required) Password for the specified user. ||
|| ClientID || (optional) Sets the client id establishing a session. (defaults to "tst") ||
|| *Methods* || *Summary* ||
|| create || Starts the session handshake process ||
|| *Events* || *Summary* ||
|| complete || Dispatched when a session handshake is complete (Event.COMPLETE) ||
|| ioError|| Dispatched when there is a problem contacting the server (IOErrorEvent.IO_ERROR) ||
|| *Properties* (read-only) || *Summary* ||
|| success (Boolean) || If a proper session has been established, this will return true ||
|| status (String) || The status code returned from the server after a handshake. ||
|| reason (String) || If a handshake is unsuccessful, a reason may be returned. ||
|| id (String) || The unique session id assigned with a successful handshake. ||
|| postURL (String) || The URL to post submissions to. ||
|| npURL (String) || The URL to post real-time now playing submissions to. ||
|| timestamp (Number) || The timestamp that was used to generate an authentication string ||

== Example Usage ==

{{{
import com.lfm.client.Session;

var lfmSession:Session = new Session("Username","Password");
lfmSession.addEventListener(Event.COMPLETE,sessionHandler);
lfmSession.create();

function sessionHandler(event:Event) {
    trace("Session established: "+lfmSession.success);
    trace("Session id: "+lfmSession.id);
}

}}}



